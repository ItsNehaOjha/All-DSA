
Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]

--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

public static void(int[] arr){
  int n= arr.length;
  int[] num= new int[n];
  for(int i=0;i<n;i++){
    num[(i+k)%n]= arr[i];   //here the position matters as we are changing the 0 at the derived positon to the value of the original array 
  }
  for(int i=0;i<n;i++){
    arr[i]=num[i]  //noteeeee== assign new values to original array not to the created one so must write : arr[i]= nums[i]
  }
  
}


Given two strings s and goal, return true if and only if s can become goal after some number of shifts on s.

A shift on s consists of moving the leftmost character of s to the rightmost position.

For example, if s = "abcde", then it will be "bcdea" after one shift.



public static boolean isRotate( String s, String goal){
    return (s.length()==goal.length()  && (s+s).conatins(goal));
}
